package com.jxust.action;

import java.util.Date;
import java.util.Iterator;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.jxust.bean.Forum;
import com.jxust.bean.User;
import com.jxust.service.ForumService;
import com.jxust.util.PageToolBar;
import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.ModelDriven;


@Controller
@Scope("prototype")
public class ForumAction extends ActionSupport {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private Forum forum=new Forum();
	public Forum getForum() {
		return forum;
	}
	public void setForum(Forum forum) {
		this.forum = forum;
	}

    private String forumError;

	public String getForumError() {
		return forumError;
	}
	public void setForumError(String forumError) {
		this.forumError = forumError;
	}

	@Resource
	private ForumService forumService;
	
	private PageToolBar toolBar;
	private int pageSize=8;
	private int currentPage=1;
	private int bbs;
	
	
	public int getBbs() {
		return bbs;
	}
	public void setBbs(int bbs) {
		this.bbs = bbs;
	}
	public PageToolBar getToolBar() {
		return toolBar;
	}
	public void setToolBar(PageToolBar toolBar) {
		this.toolBar = toolBar;
	}
	public int getPageSize() {
		return pageSize;
	}
	public void setPageSize(int pageSize) {
		this.pageSize = pageSize;
	}
	public int getCurrentPage() {
		return currentPage;
	}
	public void setCurrentPage(int currentPage) {
		this.currentPage = currentPage;
	}
	/**
	 * 发帖
	 * @return
	 * @throws Exception
	 */
	public String addForumTheme()throws Exception{
		
		forum.setCreateTime(new Date());
		forum.setUpdateTime(new Date());
		
		forum.setUsers((User)ActionContext.getContext().getSession().get("user"));
		if(forum.getDesciption()==null||forum.getDesciption().isEmpty()){
			ActionContext.getContext().put("forumError", "发帖描述不可为空！");
			return"forumError";
		}
		if(forum.getDesciption().length()>=255){
			ActionContext.getContext().put("forumError", "您输入的字数超过设定，如还有必要描述请在回复中继续描述！");
			return"forumError";
		}
		forumService.save(forum);
		return"toaddForum";
	}
	/**
	 * 前台分页
	 * @return
	 * @throws Exception
	 */
	public String list()throws Exception{
		//String test=(String) ActionContext.getContext().get("forumError");
		if(forum==null){
			forum=new Forum();
		}
		String hql=forumService.getHQL(forum);
		int forumCount=forumService.getCountByHql(hql);
		
		if(getToolBar()==null){
			setToolBar(new PageToolBar(forumCount,pageSize));
		}else{
			getToolBar().setResultsetCount(forumCount);
			getToolBar().setPageSize(pageSize);
		}
		List<Forum> forumList=forumService.getListForPage(hql,toolBar.getStartRow(),toolBar.getEndRow());
		
		if(bbs!=0){
			if(bbs==1){
				ActionContext.getContext().put("bbsloginError", "你已登录，请勿重复登录！");
			}else{
				ActionContext.getContext().put("bbsloginError", "用户名或密码错误！");
				
			}
		}
		ActionContext.getContext().put("forumList", forumList);
		return"tolist";
	}
	
	/**
	 * 后台删除主题
	 * @return
	 * @throws Exception
	 */
	public String delete()throws Exception{
		
		forumService.delete(forum.getId());
		return"toDelete";
	}
	/**
	 * 后台主题管理
	 * @return
	 * @throws Exception
	 */
	public String forumManage()throws Exception{
		
		if(forum==null){
			forum=new Forum();
		}
		String hql=forumService.getHQL(forum);
		int forumCount=forumService.getCountByHql(hql);
		
		if(getToolBar()==null){
			setToolBar(new PageToolBar(forumCount,pageSize));
		}else{
			getToolBar().setResultsetCount(forumCount);
			getToolBar().setPageSize(pageSize);
		}
		List<Forum> backforumList=forumService.getListForPage(hql,toolBar.getStartRow(),toolBar.getEndRow());
		ActionContext.getContext().put("backforumList", backforumList);
		return"toforumManage";
	}
	public String forumbatchDelete(){
		int size=forumService.getSize();
		if(size<=0){
			return "toDeleteError";
		}else{
			List<Forum> forumList=forumService.findAll();
			for (Iterator iterator = forumList.iterator(); iterator.hasNext();) {
				Forum forum = (Forum) iterator.next();
				forumService.delete(forum.getId());
			}
		}
		return"tobatchDelete";
	}
}
